/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef GATEWAY_QPB_H
#define GATEWAY_QPB_H

#include <QtProtobuf/qprotobuflazymessagepointer.h>
#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qtprotobuftypes.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qlist.h>
#include <QtCore/qmetatype.h>
#include <QtCore/qshareddata.h>
#include <QtCore/qstring.h>

namespace SnowK {
class ClientAuthenticationReq;
using ClientAuthenticationReqRepeated = QList<ClientAuthenticationReq>;
namespace ClientAuthenticationReq_QtProtobufNested {
enum class QtProtobufFieldEnum;
} // namespace ClientAuthenticationReq_QtProtobufNested


class ClientAuthenticationReq_QtProtobufData;
class ClientAuthenticationReq : public QProtobufMessage
{
    Q_PROTOBUF_OBJECT
    Q_PROPERTY(QString requestId READ requestId WRITE setRequestId SCRIPTABLE true)
    Q_PROPERTY(QString sessionId READ sessionId WRITE setSessionId SCRIPTABLE true)

public:
    using QtProtobufFieldEnum = ClientAuthenticationReq_QtProtobufNested::QtProtobufFieldEnum;
    ClientAuthenticationReq();
    ~ClientAuthenticationReq();
    ClientAuthenticationReq(const ClientAuthenticationReq &other);
    ClientAuthenticationReq &operator =(const ClientAuthenticationReq &other);
    ClientAuthenticationReq(ClientAuthenticationReq &&other) noexcept;
    ClientAuthenticationReq &operator =(ClientAuthenticationReq &&other) noexcept
    {
        swap(other);
        return *this;
    }
    void swap(ClientAuthenticationReq &other) noexcept
    {
        QProtobufMessage::swap(other);
        dptr.swap(other.dptr);
    }

    const QString &requestId() const &;

    const QString &sessionId() const &;
    void setRequestId(const QString &requestId);
    void setRequestId(QString &&requestId);
    void setSessionId(const QString &sessionId);
    void setSessionId(QString &&sessionId);
    static void registerTypes();

private:
    friend bool comparesEqual(const ClientAuthenticationReq &lhs, const ClientAuthenticationReq &rhs) noexcept;
    friend bool operator==(const ClientAuthenticationReq &lhs, const ClientAuthenticationReq &rhs) noexcept
    {
        return comparesEqual(lhs, rhs);
    }
    friend bool operator!=(const ClientAuthenticationReq &lhs, const ClientAuthenticationReq &rhs) noexcept
    {
        return !comparesEqual(lhs, rhs);
    }
    QExplicitlySharedDataPointer<ClientAuthenticationReq_QtProtobufData> dptr;
};
namespace ClientAuthenticationReq_QtProtobufNested {
Q_NAMESPACE

enum class QtProtobufFieldEnum {
    RequestIdProtoFieldNumber = 1,
    SessionIdProtoFieldNumber = 2,
};
Q_ENUM_NS(QtProtobufFieldEnum)

} // namespace ClientAuthenticationReq_QtProtobufNested
} // namespace SnowK

#endif // GATEWAY_QPB_H
